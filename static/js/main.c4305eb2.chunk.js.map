{"version":3,"sources":["components/header/header.module.css","components/training-resources/training-resources.module.css","components/domain-table/domain-table.module.css","components/filter/filter.module.css","serviceWorker.ts","components/header/header.tsx","components/progress-bar/progress-bar.tsx","components/domain-table/domain-table.tsx","services/http/http.ts","services/competency/competency.ts","services/training/training.ts","components/course/course.tsx","components/preface-training/preface-training.tsx","components/filter/filter.tsx","components/table-courses/table-courses.tsx","components/select/select.tsx","components/training-resources/training-resources.tsx","components/preface-competencies/preface-competencies.tsx","components/core-competencies/core-competencies.tsx","components/shared-content/shared-content.tsx","index.tsx","components/root/root.tsx"],"names":["module","exports","Boolean","window","location","hostname","match","Header","withRouter","history","showKrc","pathname","startsWith","className","styles","Tab","Inactive","onClick","push","ProgressBar","useState","counter","setCounter","useEffect","requestInterceptor","axios","interceptors","request","use","config","_counter","responseInterceptor","response","error","Promise","reject","eject","data","fetch","then","json","myJson","DomainTable","React","memo","domains","map","id","title","competencies","key","Heading","attributes","tabIndex","trigger","kind","length","attribute","item","competency_profile","filter","competency","index","all","findIndex","c","competency_id","profile","toString","to","defaults","baseURL","process","params","_format","http","get","post","delete","patch","getLatestBioExcelVersion","a","bioExcel","liveVersion","versions","version","status","number","getBioExcelDomains","cleanupDomain","clean","forEach","nid","cleanCompetency","includes","archived","cleanAttributes","Knowledge","Skill","Attitude","allNoCase","type","toLowerCase","join","getTrainingResources","cleanupTraining","code","courses","course","framework_label","keywords","Course","found","load","setLoad","resetState","getTrainingResource","catch","description","target_audience","learning_outcomes","trainers","url","parse","style","borderBottom","href","PrefaceTraining","Filter","onChange","role","FormLook","onSubmit","event","preventDefault","placeholder","onKeyUp","currentTarget","value","trim","TableCourses","Select","options","TrainingResources","filteredCourses","setFilteredCourses","keyword","setKeyword","setOptions","topic","setTopic","kindOptions","setKindOptions","setKind","unique","words","Object","keys","reduce","uniqueWords","word","topics","split","kinds","LowerSpace","RightSpace","PrefaceCompetencies","CoreCompetencies","filteredDomains","setFilteredDomains","domain","SharedContent","rel","data-shared","target","data-src","data-name","height","ReactDOM","render","basename","setVersion","setDomains","setCourses","fetchTraining","newCourses","fetchCompetencies","path","exact","from","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.c4305eb2.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Inactive\":\"header_Inactive__X8Ywc\",\"Tab\":\"header_Tab__26ppv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"LowerSpace\":\"training-resources_LowerSpace__s8ZO5\",\"RightSpace\":\"training-resources_RightSpace__2bq2a\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Heading\":\"domain-table_Heading__3l_dM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"FormLook\":\"filter_FormLook__acSxA\"};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\n\nimport { withRouter } from 'react-router-dom';\n\nimport styles from './header.module.css';\n\nexport const Header = withRouter(({ location, history }) => {\n  const showKrc = location.pathname.startsWith('/training');\n\n  return (\n    <header className=\"page-entry-header\">\n      <div>\n        <h1>Knowledge Resource Center</h1>\n      </div>\n      <h1\n        className={`page-entry-title entry-title ${styles.Tab} ${\n          showKrc ? '' : styles.Inactive\n        }`}\n        onClick={() => history.push('/training')}\n      >\n        Training Resources\n      </h1>{' '}\n      <h1\n        className={`page-entry-title entry-title ${styles.Tab} ${\n          showKrc ? styles.Inactive : ''\n        }`}\n        onClick={() => history.push('/competencies')}\n      >\n        Core Competencies\n      </h1>\n    </header>\n  );\n});\n","import React, { useEffect, useState } from 'react';\n\nimport axios from 'axios';\n\nimport './progress-bar.css';\n\nexport const ProgressBar = () => {\n  const [counter, setCounter] = useState(0);\n\n  useEffect(() => {\n    // Request\n    const requestInterceptor = axios.interceptors.request.use(config => {\n      setCounter(_counter => _counter + 1);\n      return config;\n    });\n\n    // Response\n    const onSuccess = (response: import('axios').AxiosResponse) => {\n      setCounter(_counter => (_counter > 0 ? _counter - 1 : 0));\n      return response;\n    };\n    const onError = (error: any) => {\n      setCounter(_counter => (_counter > 0 ? _counter - 1 : 0));\n      return Promise.reject(error);\n    };\n    const responseInterceptor = axios.interceptors.response.use(\n      onSuccess,\n      onError\n    );\n\n    return () => {\n      axios.interceptors.response.eject(responseInterceptor);\n      axios.interceptors.request.eject(requestInterceptor);\n    };\n  }, []);\n\n  return (\n    <section className=\"vf-inlay__content progressbar-slider\">\n      {counter ? (\n        <>\n          <div className=\"progressbar-line\"></div>\n          <div className=\"progressbar-progress progressbar-increase\" />\n          <div className=\"progressbar-progress progressbar-decrease\" />\n        </>\n      ) : null}\n    </section>\n  );\n};\n","import React from 'react';\n\nimport Collapsible from 'react-collapsible';\n\nimport styles from './domain-table.module.css';\n\nimport { Link } from 'react-router-dom';\n\ntype Props = {\n  domains: import('../../models/competency').CleanDomain[];\n};\n\nlet data: {\n  id: string;\n  title: string;\n  competency_profile: [{ competency_id: 'string' }];\n}[] = [];\n\nfetch(\n  'https://live-competency-mapper.pantheonsite.io/api/resources?_format=json'\n)\n  .then(function(response) {\n    return response.json();\n  })\n  .then(function(myJson) {\n    data = myJson;\n    //console.log(data[0])\n  });\n\nexport const DomainTable = React.memo(({ domains }: Props) => (\n  <>\n    {domains.map(({ id, title, competencies }) => (\n      <span key={id}>\n        <div className={styles.Heading}>{title} </div>\n        <table className=\"table table-striped\">\n          <tbody>\n            {competencies.map(({ id, title, attributes }) => (\n              <tr>\n                <td>\n                  <Collapsible key={id} tabIndex={0.1} trigger={title}>\n                    {(['Knowledge', 'Skill', 'Attitude'] as (\n                      | 'Knowledge'\n                      | 'Skill'\n                      | 'Attitude')[]).map(kind =>\n                      attributes[kind].length < 1 ? null : (\n                        <div key={kind}>\n                          {kind}:\n                          <ul>\n                            {attributes[kind].map(attribute => (\n                              <li key={attribute}>{attribute}</li>\n                            ))}\n                          </ul>\n                        </div>\n                      )\n                    )}\n                    <div>\n                      Training resources:\n                      <ul>\n                        {data.map(item =>\n                          item.competency_profile\n                            .filter(\n                              (competency, index, all) =>\n                                all.findIndex(\n                                  c =>\n                                    c.competency_id === competency.competency_id\n                                ) === index\n                            )\n                            .map(profile => {\n                              if (profile.competency_id.toString() == id) {\n                                //console.log(id +\" \"+ item.title)\n\n                                return (\n                                  <li key={id}>\n                                    <Link to={`/training/${item.id}`}>\n                                      {item.title}\n                                    </Link>\n                                  </li>\n                                );\n                              }\n                            })\n                        )}\n                      </ul>\n                    </div>\n                  </Collapsible>\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </span>\n    ))}\n  </>\n));\n","import axios from 'axios';\n\nconst apiUrl = process.env.REACT_APP_API_URL;\n\naxios.defaults.baseURL = apiUrl;\n\naxios.interceptors.request.use(config => {\n  config.params = { ...config.params, _format: 'json' };\n  return config;\n});\n\nexport const http = {\n  get: axios.get,\n  post: axios.post,\n  delete: axios.delete,\n  patch: axios.patch\n};\n","import { http } from '../http/http';\n\nexport async function getLatestBioExcelVersion(): Promise<string> {\n  const response = await http.get<\n    import('../../models/competency').CompetencyVersion[]\n  >('version_manager');\n  const bioExcel = response.data.filter(\n    competency => competency.title === 'BioExcel'\n  )[0];\n  const liveVersion = bioExcel.versions.filter(\n    version => version.status === 'live'\n  )[0];\n  return liveVersion.number;\n}\n\ntype CleanDomain = import('../../models/competency').CleanDomain;\n\nexport async function getBioExcelDomains(\n  version: string\n): Promise<CleanDomain[]> {\n  const response = await http.get<\n    import('../../models/competency').Framework[]\n  >(`bioexcel/${version}`);\n  return response.data.length === 0\n    ? []\n    : cleanupDomain(response.data[0].domains);\n}\n\nexport function cleanupDomain(\n  domains: import('../../models/competency').Domain[]\n): CleanDomain[] {\n  const clean: CleanDomain[] = [];\n\n  domains.forEach(({ nid, id, title, competencies }, index) => {\n    const cleanCompetency = competencies\n      .filter(competency => ['no', '0'].includes(competency.archived))\n      .map(competency => {\n        const cleanAttributes = {\n          Knowledge: [] as string[],\n          Skill: [] as string[],\n          Attitude: [] as string[]\n        };\n        const allNoCase: string[] = [];\n        // competency.archived;\n        competency.attributes.forEach(\n          ({ title, type, archived }) =>\n            ['no', '0'].includes(competency.archived) &&\n            cleanAttributes[type].push(title) &&\n            allNoCase.push(title.toLowerCase())\n        );\n        allNoCase.push(competency.title.toLowerCase());\n        return {\n          id: competency.id,\n          title: competency.title,\n          attributes: cleanAttributes,\n          allNoCase: allNoCase.join('\\n')\n        };\n      });\n    clean.push({\n      id: nid || id || '' + index,\n      title: title,\n      competencies: cleanCompetency\n    });\n  });\n\n  return clean;\n}\n","import { http } from '../http/http';\n\nimport { cleanupDomain } from '../competency/competency';\n\ntype TrainingResource = import('../../models/training').TrainingResource;\n\nexport async function getTrainingResources(): Promise<TrainingResource[]> {\n  const response = await http.get<TrainingResource[]>('resources');\n\n  return cleanupTraining(response.data);\n}\n\nexport async function getTrainingResource(\n  code: string\n): Promise<{\n  courses: TrainingResource[];\n  domains: ReturnType<typeof cleanupDomain>;\n}> {\n  const response = await http.get<TrainingResource>('resources', {\n    params: { id: code }\n  });\n  const courses = cleanupTraining([response.data]);\n  const domains =\n    courses.length > 0 && courses[0].competency_profile.length > 0\n      ? cleanupDomain(courses[0].competency_profile[0].domains || [])\n      : [];\n  return { courses, domains };\n}\n\nfunction cleanupTraining(courses: TrainingResource[]): TrainingResource[] {\n  const bioExcelTrainings = courses.map(course => ({\n    ...course,\n    competency_profile: course.competency_profile.filter(competency =>\n      [competency.framework_label, competency.title].includes('BioExcel')\n    ),\n\n    // Added lowercase version of some properties for easy filtering\n    allNoCase: `${course.title.toLowerCase()} ${course.type.toLowerCase()} ${course.keywords &&\n      course.keywords.toLowerCase()}`\n  }));\n\n  return bioExcelTrainings.filter(\n    course => course.archived === 'no' && course.competency_profile.length > 0\n  );\n}\n","import React, { useEffect, useState } from 'react';\n\nimport { withRouter, Link } from 'react-router-dom';\nimport { DomainTable } from '../domain-table/domain-table';\nimport parse from 'html-react-parser';\nimport { getTrainingResource } from '../../services/training/training';\n\ntype TrainingResource = import('../../models/training').TrainingResource;\n\nexport const Course = withRouter(({ match }) => {\n  const [load, setLoad] = useState({\n    course: null as TrainingResource | null,\n    domains: [] as import('../../models/competency').CleanDomain[],\n    found: true\n  });\n\n  function resetState() {\n    setLoad({ course: null, domains: [], found: false });\n  }\n  useEffect(() => {\n    getTrainingResource(match.params.course)\n      .then(({ courses, domains }) => {\n        resetState();\n        if (courses.length > 0) {\n          setLoad({ course: courses[0], domains: domains, found: true });\n        }\n      })\n      .catch(error => resetState());\n  }, [match.params.course]);\n\n  const { found, course, domains } = load;\n\n  if (!found) {\n    return (\n      <>\n        <h2>\n          <span className=\"fas exclamation-triangle\"></span> Sorry, the\n          requested training resource was not found!\n        </h2>\n        <Link to=\"/training\">List of all training resources</Link>\n      </>\n    );\n  }\n\n  if (course === null) {\n    return null;\n  }\n\n  if (course.archived === 'yes') {\n    return (\n      <>\n        <h2>\n          <span className=\"fas exclamation-triangle\"></span> Sorry, the\n          requested training resource has expired!\n        </h2>\n        <Link to=\"/training\">List of all training resources</Link>\n      </>\n    );\n  }\n\n  const {\n    title,\n    description,\n    target_audience,\n    learning_outcomes,\n    trainers,\n    url,\n    type\n  } = course;\n  return (\n    <>\n      <h1>{title}</h1>\n      {description && parse(description)}\n\n      <div>\n        {url && (\n          <div>\n            <a style={{ borderBottom: 'dashed 1px' }} href={url}>\n              External link to the training resource{' '}\n            </a>{' '}\n            <i className=\"fa fa-chevron-right\"></i>\n          </div>\n        )}\n        {type && (\n          <div>\n            <h2>Type of training</h2> {type}\n          </div>\n        )}\n      </div>\n\n      {target_audience && (\n        <>\n          <h2>Target Audience</h2>\n          {parse(target_audience)}\n        </>\n      )}\n\n      {learning_outcomes && (\n        <>\n          <h2>Learning Outcomes</h2>\n          {parse(learning_outcomes)}\n        </>\n      )}\n\n      {trainers && (\n        <>\n          <h2>Provider(s)</h2>\n          {parse(trainers)}\n        </>\n      )}\n\n      {course.competency_profile.length > 0 && (\n        <>\n          <h2>Competency profile</h2>\n          <DomainTable domains={domains} />\n        </>\n      )}\n\n      <br />\n\n      <Link to=\"/training\">List of all training resources</Link>\n    </>\n  );\n});\n","import React from 'react';\n\nexport const PrefaceTraining = React.memo(() => (\n  <p>\n    The BioExcel knowledge resource center is a repository for computational\n    biomolecular training resources aggregated from BioExcel partners and third\n    party providers. The resources are primarily online based, such as\n    tutorials, online courses and videos but also include face-to-face event. If\n    you know of any useful resources that you would like to share with the\n    community let us know through this online{' '}\n    <a href=\"https://docs.google.com/forms/d/e/1FAIpQLSfY-GI9sGuhRtMlIJJ1zVZtvD8peM3UnzemjSokUK3yAk0Xtw/viewform?c=0&w=1\">\n      form\n    </a>\n    . The training resources in the Knowledge Resource Center have been tagged\n    with the BioExcel competencies.\n  </p>\n));\n","import React from 'react';\n\nimport styles from './filter.module.css';\n\ntype Props = {\n  onChange(keyword: string): void;\n};\n\nexport const Filter = React.memo(({ onChange }: Props) => (\n  <form\n    role=\"search\"\n    className={`search-form ${styles.FormLook}`}\n    onSubmit={event => event.preventDefault()}\n  >\n    <input\n      type=\"search\"\n      className=\"search-field\"\n      placeholder=\"Filter by keyword\"\n      onKeyUp={event =>\n        onChange(event.currentTarget.value.trim().toLowerCase())\n      }\n    />\n  </form>\n));\n","import React from 'react';\n\nimport { Link } from 'react-router-dom';\n\ntype Props = {\n  courses: import('../../models/training').TrainingResource[];\n};\n\nexport const TableCourses = React.memo(({ courses }: Props) =>\n  courses.length < 1 ? null : (\n    <table>\n      <thead>\n        <tr>\n          <th>Title</th>\n          <th>Topics</th>\n          <th>Type</th>\n        </tr>\n      </thead>\n      <tbody>\n        {courses.map(({ id, title, keywords, type }) => (\n          <tr key={id}>\n            <td>\n              <Link to={`/training/${id}`}>{title}</Link>\n            </td>\n            <td>{keywords}</td>\n            <td>{type}</td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  )\n);\n","import React from 'react';\n\ntype Props = {\n  options: string[];\n  onChange(value: string): void;\n  className?: string;\n};\n\nexport const Select = React.memo(({ options, onChange, className }: Props) => (\n  <select\n    onChange={event => onChange(event.currentTarget.value)}\n    className={className}\n  >\n    {options.map((value, index) => (\n      <option key={value || 'default'} value={index === 0 ? '' : value}>\n        {value}\n      </option>\n    ))}\n  </select>\n));\n","import React, { useEffect, useState } from 'react';\n\nimport { PrefaceTraining } from '../preface-training/preface-training';\nimport { Filter } from '../filter/filter';\nimport { TableCourses } from '../table-courses/table-courses';\nimport { Select } from '../select/select';\n\nimport styles from './training-resources.module.css';\n\ntype TrainingResource = import('../../models/training').TrainingResource;\n\ntype Props = {\n  courses: TrainingResource[];\n};\n\nexport const TrainingResources = ({ courses }: Props) => {\n  const [filteredCourses, setFilteredCourses] = useState(courses);\n  const [keyword, setKeyword] = useState('');\n  const [options, setOptions] = useState([] as string[]);\n  const [topic, setTopic] = useState('');\n  const [kindOptions, setKindOptions] = useState([] as string[]);\n  const [kind, setKind] = useState('');\n\n  function unique(words: string[]): string[] {\n    // return [...new Set(words)];\n    // return [...words.reduce((myMap, word) => myMap.set(word, null), new Map<string, null>()).keys()];\n    return Object.keys(\n      words.reduce(\n        (uniqueWords, word) => ({ ...uniqueWords, [word]: null }),\n        {} as Record<string, null>\n      )\n    );\n  }\n\n  useEffect(() => {\n    setFilteredCourses(courses);\n    const topics = courses.reduce(\n      (keywords, course) =>\n        course.keywords\n          ? [...keywords, ...course.keywords.split(', ')]\n          : keywords,\n      [] as string[]\n    );\n    setOptions(['Topic', ...unique(topics)]);\n    const kinds = courses.reduce(\n      (keywords, course) => [...keywords, course.type],\n      [] as string[]\n    );\n    setKindOptions(['Type', ...unique(kinds)]);\n  }, [courses]);\n\n  useEffect(() => {\n    setFilteredCourses(\n      courses.filter(course => {\n        const keywords = course.keywords || '';\n        return (\n          keywords.includes(topic) &&\n          course.type.includes(kind) &&\n          course.allNoCase.includes(keyword)\n        );\n      })\n    );\n  }, [keyword, topic, kind, courses]);\n\n  return (\n    <>\n      <PrefaceTraining />\n\n      <Filter onChange={setKeyword} />\n\n      <div className={styles.LowerSpace}>\n        <span className={styles.RightSpace}>Or filter by:</span>\n\n        <Select\n          options={options}\n          className={styles.RightSpace}\n          onChange={setTopic}\n        />\n\n        <Select options={kindOptions} onChange={setKind} />\n      </div>\n\n      <TableCourses courses={filteredCourses} />\n    </>\n  );\n};\n","import React from 'react';\n\nexport const PrefaceCompetencies = React.memo(() => (\n  <p>\n    The BioExcel training programme is based on a competency profile. A\n    competency is an observable ability of any professional, integrating\n    multiple components such as knowledge, skills and behaviours. A competency\n    profile lists and defines all the competencies that an individual might need\n    to fulfil a particular role, or that define specific user groups. Together\n    with our user community we have defined the knowledge and skills that we\n    think are relevant for people working in computational biomolecular\n    research. In total we have defined 31 competencies and they are grouped\n    together in four large categories. You can browse them in the table below,\n    under each competency there is a link to all the training resources that we\n    have identified as relevant.\n  </p>\n));\n","import React, { useEffect, useState } from 'react';\n\nimport { PrefaceCompetencies } from '../preface-competencies/preface-competencies';\nimport { Filter } from '../filter/filter';\nimport { DomainTable } from '../domain-table/domain-table';\n\ntype Props = {\n  domains: import('../../models/competency').CleanDomain[];\n  version: string;\n};\n\nexport const CoreCompetencies = ({ domains, version }: Props) => {\n  const [filteredDomains, setFilteredDomains] = useState(domains);\n\n  const onFilter = (keyword: string) => {\n    setFilteredDomains(\n      domains\n        .map(domain => ({\n          ...domain,\n          competencies: domain.competencies.filter(competency =>\n            competency.allNoCase.includes(keyword)\n          )\n        }))\n        .filter(domain => domain.competencies.length > 0)\n    );\n  };\n\n  useEffect(() => {\n    setFilteredDomains(domains);\n  }, [domains]);\n\n  return (\n    <>\n      <PrefaceCompetencies />\n\n      <Filter onChange={onFilter} />\n\n      <DomainTable domains={filteredDomains} />\n\n      {version !== '1.0' ? (\n        <a href={`https://competency.ebi.ac.uk/framework/bioexcel/${version}`}>\n          See previous versions of the BioExcel competency\n        </a>\n      ) : null}\n    </>\n  );\n};\n","import React from 'react';\n\nexport const SharedContent = React.memo(() => {\n  return (\n    <>\n      <div className=\"sharedaddy sd-sharing-enabled\">\n        <div className=\"robots-nocontent sd-block sd-social sd-social-icon-text sd-sharing\">\n          <h3 className=\"sd-title\">Share this:</h3>\n          <div className=\"sd-content\">\n            <ul>\n              <li className=\"share-linkedin\">\n                <a\n                  rel=\"nofollow noopener noreferrer\"\n                  data-shared=\"sharing-linkedin-3249\"\n                  className=\"share-linkedin sd-button share-icon\"\n                  href=\"https://bioexcel.eu/equality-and-diversity/?share=linkedin\"\n                  target=\"_blank\"\n                  title=\"Click to share on LinkedIn\"\n                >\n                  <span>LinkedIn</span>\n                </a>\n              </li>\n              <li className=\"share-twitter\">\n                <a\n                  rel=\"nofollow noopener noreferrer\"\n                  data-shared=\"sharing-twitter-3249\"\n                  className=\"share-twitter sd-button share-icon\"\n                  href=\"https://bioexcel.eu/equality-and-diversity/?share=twitter\"\n                  target=\"_blank\"\n                  title=\"Click to share on Twitter\"\n                >\n                  <span>Twitter</span>\n                </a>\n              </li>\n              <li className=\"share-print\">\n                <a\n                  rel=\"nofollow noopener noreferrer\"\n                  data-shared=\"\"\n                  className=\"share-print sd-button share-icon\"\n                  href=\"https://bioexcel.eu/equality-and-diversity/#print\"\n                  target=\"_blank\"\n                  title=\"Click to print\"\n                >\n                  <span>Print</span>\n                </a>\n              </li>\n              <li className=\"share-end\"></li>\n            </ul>\n          </div>\n        </div>\n      </div>\n      <div\n        className=\"sharedaddy sd-block sd-like jetpack-likes-widget-wrapper jetpack-likes-widget-unloaded\"\n        id=\"like-post-wrapper-104095998-3249-5d12135808442\"\n        data-src=\"https://widgets.wp.com/likes/#blog_id=104095998&amp;post_id=3249&amp;origin=bioexcel.eu&amp;obj_id=104095998-3249-5d12135808442\"\n        data-name=\"like-post-frame-104095998-3249-5d12135808442\"\n      >\n        <h3 className=\"sd-title\">Like this:</h3>\n        <div\n          className=\"likes-widget-placeholder post-likes-widget-placeholder\"\n          style={{ height: '55px' }}\n        >\n          <span className=\"button\">\n            <span>Like</span>\n          </span>\n          <span className=\"loading\">Loading...</span>\n        </div>\n        <span className=\"sd-text-color\"></span>\n        {/* eslint-disable-next-line jsx-a11y/anchor-is-valid, jsx-a11y/anchor-has-content */}\n        <a className=\"sd-link-color\"></a>\n      </div>\n    </>\n  );\n});\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport * as serviceWorker from './serviceWorker';\n\nimport { Root } from './components/root/root';\n\nimport './index.css';\n\nReactDOM.render(\n  <BrowserRouter basename={process.env.PUBLIC_URL}>\n    <Root />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React, { useState, useEffect } from 'react';\nimport { Switch, Route, Redirect } from 'react-router-dom';\n\nimport { Header } from '../header/header';\nimport { ProgressBar } from '../progress-bar/progress-bar';\nimport { Course } from '../course/course';\nimport { TrainingResources } from '../training-resources/training-resources';\nimport { CoreCompetencies } from '../core-competencies/core-competencies';\nimport { SharedContent } from '../shared-content/shared-content';\n\nimport { getTrainingResources } from '../../services/training/training';\nimport {\n  getBioExcelDomains,\n  getLatestBioExcelVersion\n} from '../../services/competency/competency';\n\nexport const Root = () => {\n  const [version, setVersion] = useState('1.0');\n  const [domains, setDomains] = useState<\n    import('../../models/competency').CleanDomain[]\n  >([]);\n  const [courses, setCourses] = useState<\n    import('../../models/training').TrainingResource[]\n  >([]);\n\n  useEffect(() => {\n    const fetchTraining = async () => {\n      const newCourses = await getTrainingResources();\n      setCourses(newCourses);\n    };\n\n    const fetchCompetencies = async () => {\n      const version = await getLatestBioExcelVersion();\n      setVersion(version);\n      const domains = await getBioExcelDomains(version);\n      setDomains(domains);\n    };\n\n    Promise.all([fetchTraining(), fetchCompetencies()]);\n  }, []);\n\n  return (\n    <>\n      <Header />\n\n      <div className=\"entry-content\">\n        <ProgressBar />\n\n        <Switch>\n          <Route path=\"/training/:course\" render={() => <Course />} />\n          <Route\n            path=\"/training\"\n            render={() => <TrainingResources courses={courses} />}\n          />\n          <Route\n            path=\"/competencies\"\n            render={() => (\n              <CoreCompetencies version={version} domains={domains} />\n            )}\n          />\n          <Redirect exact from=\"/\" to=\"/training\" />\n          <Redirect to=\"/training\" />\n        </Switch>\n\n        <SharedContent />\n      </div>\n    </>\n  );\n};\n"],"sourceRoot":""}